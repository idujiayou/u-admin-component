var Components = require('../../components.json');
var fs = require('fs');
var render = require('json-templater/string');
var uppercamelcase = require('uppercamelcase');
var path = require('path');
var endOfLine = require('os').EOL;

var OUTPUT_PATH = path.join(__dirname, '../../lib/index.js');
var IMPORT_TEMPLATE = 'import {{name}} from \'u-admin-component/lib/components/{{package}}.js\';';
var INSTALL_COMPONENT_TEMPLATE = '  {{name}}';
var MAIN_TEMPLATE = `/* Automatically generated by './build/bin/build-index.js' */
import { createApp, h } from 'vue'
{{include}}
const components = [
{{install}}
];
const install = function(Vue, opts = {}) {

  components.forEach(component => {
    Vue.component(component.name, component);
  });
};
/* istanbul ignore if */
if (typeof window !== 'undefined' && window.Vue) {
  install(window.Vue);
}
export default {
  version: '{{version}}',
  install,
  createApp(App) {
    let obj = createApp(App)
    obj.use({
      install(app){
        app.config.globalProperties.$createElement = h
      }
    })
    return obj
  },
{{list}}
};
`;

delete Components.font;

var ComponentNames = Object.keys(Components);

var includeComponentTemplate = [];
var installTemplate = [];
var listTemplate = [];

ComponentNames.forEach(name => {
  var componentName = uppercamelcase(name);

  includeComponentTemplate.push(render(IMPORT_TEMPLATE, {
    name: componentName,
    package: name
  }))

  installTemplate.push(render(INSTALL_COMPONENT_TEMPLATE, {
    name: componentName,
    component: name
  }))

  listTemplate.push(`  ${componentName}`);
});

var template = render(MAIN_TEMPLATE, {
  include: includeComponentTemplate.join(endOfLine),
  install: installTemplate.join(',' + endOfLine),
  version: process.env.VERSION || require('../../package.json').version,
  list: listTemplate.join(',' + endOfLine)
});


fs.mkdir('lib',function(error){
  console.log(error)
  fs.writeFileSync(OUTPUT_PATH, template);
  if(error){
      console.log(error);
      return false;
  }
  console.log('创建目录成功');
})

console.log('[build entry] DONE:', OUTPUT_PATH);